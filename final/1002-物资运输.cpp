/*
物资运输
Description

疫情期间, 由于各个城市的严重程度不同, 需要互相运输物资进行支援.

现有一条高速公路用来运送医疗物资, 这条高速公路上有 nn 个城市, 编号分别为 1, 2, \cdots , n1,2,⋯,n, 有一定数量的运输车在城市之间运送物资, 每个城市都有一个加油站, 运输车可以在加油站进行油量补给(假设每次加油都把油箱加满), 但是每辆车最多补给 rr 次.

假设以高速公路的一端为原点, 每个城市到原点的距离(沿着高速公路的距离)分别为 x_1, x_2, \cdots, x_nx 
1
​	
 ,x 
2
​	
 ,⋯,x 
n
​	
 , 一辆运输车油箱的容积为 VV, 每公里消耗的油量为 cc.(所有运输车油箱的规格均相同)

请问油箱的容积最小需要是多少才能保证每辆车都可以到达目的地.


Input
输入的第一行包含两个正整数 n \in [2, 400], m\in [1, 250000]n∈[2,400],m∈[1,250000], 分别表示城市的数量以及运输车的数量.

第二行为 nn 个正整数 x_1, x_2, \cdots, x_nx 
1
​	
 ,x 
2
​	
 ,⋯,x 
n
​	
  以升序排列, 分别表示高速公路上城市到原点的距离.

后续 mm 行, 每行包含 44 个整数 s \in [1, n], d \in [s + 1, n], c \in [1, 10^9], r\in [0, n]s∈[1,n],d∈[s+1,n],c∈[1,10 
9
 ],r∈[0,n], 分别表示运输车的起点, 终点, 每公里油耗以及允许油量补给的次数.


Output
输出在保证所有运输车可以到达目的地的情况下, 运输车油箱的最小容积


Sample Input 1 

10 10
2 3 4 8 9 10 12 13 15 19
3 8 3 1
3 4 3 2
1 9 2 1
1 9 3 1
6 10 2 1
3 9 2 0
3 7 2 1
2 3 3 0
3 9 2 0
4 10 3 0
Sample Output 1

33
*/

#include<bits/stdc++.h>
using namespace std;
int n,m;
int ss[410];
struct S{
    int s;
    int d;
    long long c;
    int r;
}car[300000];
int main(){
    cin >> n >> m;
    for(int i = 1;i<=n;i++){
        cin >> ss[i];
    }
    long long maxn=0;
    for(int i = 0;i < m;i++){
        cin >> car[i].s >> car[i].d >> car[i].c >> car[i].r;
        //对每个运输车求：（终点距离-起点距离）*每公里油耗/（补给次数+1），然后取最大的值
        long long t = (ss[car[i].d] - ss[car[i].s])*car[i].c/(car[i].r + 1);
        maxn = max(t,maxn);
    }
    cout << maxn;
    return 0;
}